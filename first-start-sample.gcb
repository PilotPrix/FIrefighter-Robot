#CHIP 16F887

// Components
#DEFINE MotorL PortB.2
#DEFINE MotorL2 PortB.3
#DEFINE MotorR PortB.4
#DEFINE MotorR2 PortB.5
#DEFINE WallDet1 PortA.0 // D2, AN0
#DEFINE WallDet2 PortA.1 // D3, AN1
#DEFINE LineDet PortA.3 // D5, AN3
#DEFINE FireDet PortA.5 // D7, AN4
#DEFINE FanMotor PortB.1

// LCD display
#DEFINE LCD_IO 4
#DEFINE LCD_RS portd.0
#DEFINE LCD_RW portd.1
#DEFINE LCD_Enable portd.2
#DEFINE LCD_DB4 portd.4
#DEFINE LCD_DB5 portd.5
#DEFINE LCD_DB6 portd.6
#DEFINE LCD_DB7 portd.7

// Pinout
Dir MotorL Out
Dir MotorL2 Out
Dir MotorR Out
Dir MotorR2 Out
Dir LineDet In
Dir WallDet1 In
Dir WallDet2 In
Dir FireDet In
Dir FanMotor Out

// Variables
Dim wallDist as byte
Dim deltaWallDist as byte
Dim fireValue as byte
Dim lineCount as byte
Dim isFire as byte
Dim fireTrigger as byte
Dim fireRoom4 as byte


// Void setup
FanMotor = false
LineDet = true
lineCount = 0
isFire = 0
fireTrigger = 5
fireRoom4 = 0
// Motors on by default
MotorL = false
MotorR = false
MotorL2 = false
MotorR2 = false

Do
  wallDistF = ReadAD(AN0)
  wallDistF = (((6787/(wallDistF-3)))-4)/5
  wallDistL = ReadAD(AN1)
  wallDistL = (((6787/(wallDistL-3)))-4)/5
  fireValue = ReadAD(AN4)
  lineDetValue = ReadAD(AN3)

  CLS
  Locate 0,0
  // print("Front: ")
  // print (wallDistF)
  print ("Left: ")
  print (wallDistL)
  // print ("F: ")
  // print (fireValue)
  // print ("Front: ")
  // print (wallDistF)
  Locate 1,0
  print ("Line Det: ")
  print (lineCount)
  if fireValue <= fireTrigger then
    isFire = 1
  end if
  if isFire = 1 then
    locate (1, 0)
    print ("Fire!!")
    FanMotor = true
    gosub FireCheck

    if fireValue > 210 then
      isFire = 0
    end if
  else
    locate (1, 0)
    print("No fire")
    FanMotor = false
    
    // Wall hug
    if false then
      gosub WallHug1
    else 
      gosub WallHug2
    end if
  end if

  // Line detection
  if lineDetValue < 100 then
    lineCount += 1
  end if
  

Loop

Sub CheckRoom4
  // Go straight
  MotorL = true
  MotorR = true
  wait 2500 ms
  // Turn
  MotorL = true
  MotorR = false
  wait 1100 ms

  // Check fire
  MotorL = false
  fireValue = ReadAD(AN4)
  locate (0, 0)
  print ("Fire: ")
  print (fireValue)
  if fireValue < 100 then
    MotorL = true
    MotorR = true
    wait 200 ms
  else
    // Turn around and proceed to room 1
    MotorL = false
    MotorL2 = true
    wait 1100 ms
    MotorL2 = false
  end if
end sub

Sub WallHug1
  if wallDistF =< 10 & wallDistL =< 10 then
    // locate 0,0
    // print ("Right Sharp")
    gosub TurnRightSharp
  else if wallDistF =< 10 then
    // locate 0,0
    // print ("Reverse")
    gosub Reverse
  else if wallDistL > 25 then
    gosub TurnLeftSharp
    // locate 0,0
    // print("Left Sharp")
  else if wallDistL > 20 then
    gosub TurnLeft
    // Locate 0,0
    // print("Left")
  else if wallDistL < 10 then
    // Locate 0,0
    // print("Right")
    MotorL = true
    MotorR = false
    wait 100 ms
    // gosub TurnRight
  else
    gosub Straight
  end if
  // if lineCount == 6 then
  //   if wallDistL > 25 then
      
  //   gosub CheckRoom4
  // end if
end sub

Sub WallHug2
  if wallDistF < 17 then
    gosub RightTurn90
  // No wall to the left
  // else if wallDistL > 25 then 
    
  else if wallDistL <= 8 then
    gosub SlightRight
  else if wallDistL >= 10 then
    gosub SlightLeft
  else
    gosub straight
  end if
end sub



// --------- PROCEDURES ---------

Sub FireCheck
  // Set right and left motors off by default

  // Right and back
  MotorL = true
  MotorL2 = false
  MotorR = false
  MotorR2 = true
  wait 175 ms
  MotorL = false
  MotorL2 = true
  MotorR = true
  MotorR2 = false
  wait 175 ms

  // Left and back
  MotorR = true
  MotorR2 = false
  MotorL = false
  MotorL2 = true
  wait 190 ms
  MotorR = false
  MotorR2 = true
  MotorL = true
  MotorL2 = false
  wait 175 ms
end sub

Sub Straight
  MotorL = true
  MotorR = true
  wait 10 ms
end sub

Sub Stop
  MotorL = false
  MotorR = false
end sub

Sub Reverse
  MotorL = false
  MotorR = false
  MotorL2 = true
  MotorR2 = true
  wait 500 ms
// Start going forward
  MotorL2 = false
  MotorR2 = false
// Turn right a bit
  MotorL = true
  MotorR = false
  wait 750 ms
  MotorL = false
  MotorR = false
end sub

Sub TurnLeft
  MotorL = false
  MotorR = true
  wait 5 ms
  MotorL = true
  MotorR = true
  wait 5 ms
end sub

Sub TurnLeftSharp
  MotorL = false
  MotorR = true
  wait 15 ms
  MotorL = true
  MotorR = true
  wait 1 ms
end sub

Sub TurnRight
  MotorL = true
  MotorR = false
  wait 5 ms
  MotorL = true
  MotorR = true
  wait 5 ms
end sub

Sub TurnRightSharp
  MotorL = true
  MotorR = false
  wait 15 ms
  MotorL = true
  MotorR = true
  wait 1 ms
end sub

// Turn right very slowly
Sub SlightRight
  MotorL = true
  MotorR = false
  wait 1 ms
  MotorL = true
  MotorR = true
  wait 3 ms
end sub

// Turn left very slowly
Sub SlightLeft
  MotorL = false
  MotorR = true
  wait 1 ms
  MotorL = true
  MotorL = true
  wait 3 ms
end sub

Sub LeftTurn90
  MotorL = false
  MotorL2 = true
  MotorR = true
  MotorR2 = false
  wait 550 ms
  MotorL = false
  MotorR = false
  MotorL2 = false
  MotorR2 = false
end sub

Sub RightTurn90
  MotorL = true
  MotorL2 = false
  MotorR = false
  MotorR2 = true
  wait 550 ms
  MotorL = false
  MotorR = false
  MotorL2 = false
  MotorR2 = false
end sub